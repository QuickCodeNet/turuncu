name: "SmsManagerModule - Build and Deploy"

on:
  push:
    branches: [ 'master' ]

env:
  PROJECT_ID: main-quickcode # TODO: update Google Cloud project id
  GAR_LOCATION: europe-west1 # TODO: update Artifact Registry location
  SERVICE: turuncu-sms-manager-module # TODO: update Cloud Run service name
  REGION: europe-west1 # TODO: update Cloud Run service region
  REPO: main-quickcode-docker-repo
  BUILDANDPUSHCONTAINER_SECRET: ${{ secrets.BUILDANDPUSHCONTAINERSMSMANAGERMODULE }}
  DEPLOYTOCLOUDRUN_SECRET: ${{ secrets.DEPLOYTOCLOUDRUNSMSMANAGERMODULE }}
  DOCKER_IMAGE_NAME: 'turuncu_sms-manager-module_'
  DOCKER_REPO_NAME: api
  DOCKER_FILE_PATH: 'src/Modules/SmsManagerModule/Presentation/QuickCode.Turuncu.SmsManagerModule.Api/'

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '.github/**'
              - 'src/Common/**'
              - 'src/Modules/SmsManagerModule/**'

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
          retries: 5
          backoff: 2000
          
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          
      - name: Build and Push Container Started
        uses: nick-fields/retry@v2
        if: success() || failure()
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.BUILDANDPUSHCONTAINER_SECRET }}&sessionId=${{secrets.QUICKCODESESSIONID}}&isCompleted=false&message=InProgress'
          max_attempts: 3
          timeout_minutes: 2

      - name: Build and Push Container
        if: steps.changes.outputs.src == 'true'
        run: |-
          docker build --file ${{ env.DOCKER_FILE_PATH }}Dockerfile  -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.DOCKER_REPO_NAME }}:${{ env.DOCKER_IMAGE_NAME }}${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.DOCKER_REPO_NAME }}:${{ env.DOCKER_IMAGE_NAME }}${{ github.sha }}"
      - name: Build and Push Container Finished
        uses: nick-fields/retry@v2
        if: success() || failure()
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.BUILDANDPUSHCONTAINER_SECRET }}&sessionId=${{secrets.QUICKCODESESSIONID}}&isCompleted=true&message=Completed'
          max_attempts: 3
          timeout_minutes: 2
          
      # END - Docker auth and build
      - name: Deploy to Cloud Run Started
        uses: nick-fields/retry@v2
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.DEPLOYTOCLOUDRUN_SECRET }}&sessionId=${{secrets.QUICKCODESESSIONID}}&isCompleted=false&message=InProgress' 
          max_attempts: 3
          timeout_minutes: 2
          
      - name: Deploy to Cloud Run
        id: deploy
        if: steps.changes.outputs.src == 'true'
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          env_vars: |
            ASPNETCORE_ENVIRONMENT=CloudRun 
            ASPNETCORE_URLS=http://+
            READ_CONNECTION_STRING=${{secrets.QUICKCODESMSMANAGERMODULEDB}}
            WRITE_CONNECTION_STRING=${{secrets.QUICKCODESMSMANAGERMODULEDB}}
            ELASTIC_CONNECTION_STRING=${{secrets.QUICKCODESMSMANAGERMODULEELASTIC}}
            DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT=false 
            
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.DOCKER_REPO_NAME }}:${{ env.DOCKER_IMAGE_NAME }}${{ github.sha }}
          flags: |
            --port=80
            --allow-unauthenticated
      - name: Deploy to Cloud Run Finished
        uses: nick-fields/retry@v2
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.DEPLOYTOCLOUDRUN_SECRET }}&sessionId=${{secrets.QUICKCODESESSIONID}}&isCompleted=true&message=${{ steps.deploy.outputs.url }}' 
          max_attempts: 3
          timeout_minutes: 2
          
      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

